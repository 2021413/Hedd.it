{
  "kind": "collectionType",
  "collectionName": "up_users",
  "info": {
    "name": "user",
    "description": "",
    "singularName": "user",
    "pluralName": "users",
    "displayName": "User"
  },
  "options": {
    "timestamps": true
  },
  "attributes": {
    "username": {
      "type": "string",
      "minLength": 3,
      "unique": true,
      "configurable": false,
      "required": true
    },
    "email": {
      "type": "email",
      "minLength": 6,
      "configurable": false,
      "required": true
    },
    "provider": {
      "type": "string",
      "configurable": false
    },
    "password": {
      "type": "password",
      "minLength": 6,
      "configurable": false,
      "private": true,
      "searchable": false
    },
    "resetPasswordToken": {
      "type": "string",
      "configurable": false,
      "private": true,
      "searchable": false
    },
    "confirmationToken": {
      "type": "string",
      "configurable": false,
      "private": true,
      "searchable": false
    },
    "confirmed": {
      "type": "boolean",
      "default": false,
      "configurable": false
    },
    "blocked": {
      "type": "boolean",
      "default": false,
      "configurable": false
    },
    "role": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "plugin::users-permissions.role",
      "inversedBy": "users",
      "configurable": false
    },
    "avatar": {
      "type": "media",
      "multiple": false,
      "required": false,
      "allowedTypes": [
        "images"
      ]
    },
    "banner": {
      "type": "media",
      "multiple": false,
      "required": false,
      "allowedTypes": [
        "images"
      ]
    },
    "bio": {
      "type": "text",
      "required": false
    },
    "subscriptions": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "plugin::users-permissions.user",
      "mappedBy": "followers"
    },
    "followers": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "plugin::users-permissions.user",
      "inversedBy": "subscriptions"
    },
    "communities": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::community.community",
      "inversedBy": "members"
    },
    "moderatedCommunities": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::community.community",
      "inversedBy": "moderators"
    },
    "createdCommunities": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::community.community",
      "mappedBy": "creator"
    },
    "createdPosts": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::post.post",
      "mappedBy": "author"
    },
    "upvotedPosts": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::post.post",
      "inversedBy": "upvotes"
    },
    "downvotedPosts": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::post.post",
      "inversedBy": "downvotes"
    },
    "authoredComments": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::comment.comment",
      "mappedBy": "author"
    },
    "upvotedComments": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::comment.comment",
      "inversedBy": "upvotes"
    },
    "downvotedComments": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::comment.comment",
      "inversedBy": "downvotes"
    }
  }
}
